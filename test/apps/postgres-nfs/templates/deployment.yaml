apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres-nfs.fullname" . }}
  labels:
    {{- include "postgres-nfs.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "postgres-nfs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres-nfs.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.auth.database | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgres-nfs.fullname" . }}
                  key: postgres-password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "postgres-nfs.fullname" . }}-data
        - name: init-scripts
          configMap:
            name: {{ include "postgres-nfs.fullname" . }}-init